import{j as o,d as s}from"./iframe-Cfz2vXeE.js";import{A as t}from"./index-D6bO4-CA.js";import{B as c,I as e,C as l,L as m,F as B,S as p,Q as I,a as d,b as u,T as A}from"./index.esm-C1WN7kEu.js";import"./preload-helper-D9Z9MdNV.js";import"./index-C-OhZ25x.js";import"./Link-Dm7wEaum.js";import"./useRefObjectAsForwardedRef-DQwuL9aT.js";import"./useSlots-BdLPLn0-.js";import"./warning-CmA-h2kW.js";import"./_VisuallyHidden-CKJB9yD0.js";import"./invariant-Dix8OlSS.js";import"./Heading-Axc3-HQM.js";import"./useFocusZone-BvuuCBlY.js";import"./useProvidedRefOrCreate-Pg3blKRP.js";import"./focus-zone-ZDpdvBtN.js";import"./event-listener-signal-Pp6mWBoo.js";import"./user-agent-DiCyFeS1.js";import"./iterate-focusable-elements-QzROm7ZI.js";import"./BoxWithFallback-BKnPTtUo.js";import"./defaultSxProp-CTX1ZhUd.js";import"./constants-gM483c7h.js";import"./index.esm-BZRgk2PO.js";import"./index.esm-CN46I9JX.js";import"./Box-BgR2Y17o.js";import"./sx-BSyIY0hE.js";import"./Truncate-DUc3hzfC.js";import"./Tooltip-BuVThTi0.js";import"./useSafeTimeout-BD3cO5TN.js";import"./KeybindingHint-C2Jv3TM3.js";import"./environment-DRRHKtsv.js";import"./Text-BbpDCwQY.js";import"./anchored-position-Cz4CQZsC.js";import"./Spinner-CP1_WO7z.js";import"./VisuallyHidden-BShfgJrZ.js";import"./index-D3vEWZM2.js";import"./Stack--yR6jd9X.js";import"./useRenderForcingRef-B3HiJhUh.js";import"./IconButton-qXcIkMuV.js";import"./ButtonBase-BlGPm-3t.js";import"./AriaStatus-CzZh6U-X.js";import"./Announce-rCuV3jiI.js";import"./CounterLabel-DnnBMwbH.js";import"./Button-3sCteC9V.js";import"./useIsomorphicLayoutEffect-C_Bsqbyc.js";import"./useResizeObserver-CkcKl7_1.js";import"./useOnOutsideClick-CaQvIa_9.js";import"./ActionMenu-VmSenYrX.js";import"./useResponsiveValue-Cmf8jyBD.js";import"./useProvidedStateOrCreate-BEKIGSkE.js";import"./useMnemonics-D4gqZtvW.js";import"./AnchoredOverlay-DQ90Zw6u.js";import"./useFocusTrap-CL_Yl_fl.js";import"./useAnchoredPosition-IlJWxGCn.js";import"./Overlay-Du2pzphD.js";import"./Portal-BKCn1yDJ.js";import"./useFeatureFlag-paATTdb3.js";const Lo={title:"Experimental/Components/ActionBar"},n={render:r=>o.jsxs(t,{...r,children:[o.jsx(t.IconButton,{icon:c,"aria-label":"Bold"}),o.jsx(t.IconButton,{icon:e,"aria-label":"Italic"}),o.jsx(t.Divider,{}),o.jsx(t.IconButton,{icon:l,"aria-label":"Code"})]})};n.argTypes={size:{control:{type:"radio"},options:["small","medium","large"]},flush:{control:{type:"boolean"}}};n.args={size:"medium",flush:!1};const i=()=>{const r=s.c(1);let a;return r[0]===Symbol.for("react.memo_cache_sentinel")?(a=o.jsxs(t,{"aria-label":"Toolbar",children:[o.jsx(t.IconButton,{icon:c,"aria-label":"Bold"}),o.jsx(t.IconButton,{icon:e,"aria-label":"Italic"}),o.jsx(t.IconButton,{icon:l,"aria-label":"Code"}),o.jsx(t.IconButton,{icon:m,"aria-label":"Link"}),o.jsx(t.Divider,{}),o.jsx(t.IconButton,{icon:B,"aria-label":"File Added"}),o.jsx(t.IconButton,{icon:p,"aria-label":"Search"}),o.jsx(t.IconButton,{icon:I,"aria-label":"Insert Quote"}),o.jsx(t.IconButton,{icon:d,"aria-label":"Unordered List"}),o.jsx(t.IconButton,{icon:u,"aria-label":"Ordered List"}),o.jsx(t.IconButton,{icon:A,"aria-label":"Task List"})]}),r[0]=a):a=r[0],a};i.__docgenInfo={description:"",methods:[],displayName:"Default"};n.parameters={...n.parameters,docs:{...n.parameters?.docs,source:{originalSource:`{
  render: args => <ActionBar {...args}>
      <ActionBar.IconButton icon={BoldIcon} aria-label="Bold"></ActionBar.IconButton>
      <ActionBar.IconButton icon={ItalicIcon} aria-label="Italic"></ActionBar.IconButton>
      <ActionBar.Divider />
      <ActionBar.IconButton icon={CodeIcon} aria-label="Code"></ActionBar.IconButton>
    </ActionBar>
}`,...n.parameters?.docs?.source}}};i.parameters={...i.parameters,docs:{...i.parameters?.docs,source:{originalSource:`() => <ActionBar aria-label="Toolbar">
    <ActionBar.IconButton icon={BoldIcon} aria-label="Bold"></ActionBar.IconButton>
    <ActionBar.IconButton icon={ItalicIcon} aria-label="Italic"></ActionBar.IconButton>
    <ActionBar.IconButton icon={CodeIcon} aria-label="Code"></ActionBar.IconButton>
    <ActionBar.IconButton icon={LinkIcon} aria-label="Link"></ActionBar.IconButton>
    <ActionBar.Divider />
    <ActionBar.IconButton icon={FileAddedIcon} aria-label="File Added"></ActionBar.IconButton>
    <ActionBar.IconButton icon={SearchIcon} aria-label="Search"></ActionBar.IconButton>
    <ActionBar.IconButton icon={QuoteIcon} aria-label="Insert Quote"></ActionBar.IconButton>
    <ActionBar.IconButton icon={ListUnorderedIcon} aria-label="Unordered List"></ActionBar.IconButton>
    <ActionBar.IconButton icon={ListOrderedIcon} aria-label="Ordered List"></ActionBar.IconButton>
    <ActionBar.IconButton icon={TasklistIcon} aria-label="Task List"></ActionBar.IconButton>
  </ActionBar>`,...i.parameters?.docs?.source}}};const fo=["Playground","Default"];export{i as Default,n as Playground,fo as __namedExportsOrder,Lo as default};
