import{d as c,j as i}from"./iframe-Cfz2vXeE.js";import{R as m}from"./RelativeTime-CnUjRhzJ.js";import"./preload-helper-D9Z9MdNV.js";import"./create-component-3GntSW2q.js";const g={title:"Components/RelativeTime",component:m,parameters:{layout:"fullscreen",controls:{exclude:/^(getFormatted.*|datetime|as|theme|forwardedAs|.*Callback|update)$/g}}},l=()=>{const t=c.c(1);let e;return t[0]===Symbol.for("react.memo_cache_sentinel")?(e=i.jsx(m,{date:new Date("2020-01-01T00:00:00Z"),noTitle:!0}),t[0]=e):e=t[0],e},o=t=>{const e=c.c(8);let n,a;e[0]!==t?({date:n,...a}=t,e[0]=t,e[1]=n,e[2]=a):(n=e[1],a=e[2]);let r;e[3]!==n?(r=new Date(n),e[3]=n,e[4]=r):r=e[4];let s;return e[5]!==a||e[6]!==r?(s=i.jsx(m,{noTitle:!0,...a,date:r}),e[5]=a,e[6]=r,e[7]=s):s=e[7],s};o.args={date:new Date("2020-01-01T00:00:00Z"),second:"",minute:"",hour:"",weekday:"",day:"numeric",month:"short",year:"",timeZoneName:""};o.argTypes={hour:{type:{name:"enum",value:["","numeric","2-digit"]},control:{type:"select",labels:{"":"(None)"}}},minute:{type:{name:"enum",value:["","numeric","2-digit"]},control:{type:"select",labels:{"":"(None)"}}},second:{type:{name:"enum",value:["","numeric","2-digit"]},control:{type:"select",labels:{"":"(None)"}}},weekday:{type:{name:"enum",value:["","short","long","narrow"]},control:{type:"select",labels:{"":"(None)"}}},day:{type:{name:"enum",value:["","numeric","2-digit"]},control:{type:"select",labels:{"":"(None)"}}},month:{type:{name:"enum",value:["","numeric","2-digit","long","short","narrow"]},control:{type:"select",labels:{"":"(None)"}}},year:{type:{name:"enum",value:["","numeric","2-digit"]},control:{type:"select",labels:{"":"(None)"}}},timeZoneName:{type:{name:"enum",value:["","long","short","longOffset","shortOffset","longGeneric","shortGeneric"]},control:{type:"select",labels:{"":"(None)"}}},date:{control:"date"},format:{control:"text"}};l.__docgenInfo={description:"",methods:[],displayName:"Default"};o.__docgenInfo={description:"",methods:[],displayName:"Playground"};l.parameters={...l.parameters,docs:{...l.parameters?.docs,source:{originalSource:"() => <RelativeTime date={new Date('2020-01-01T00:00:00Z')} noTitle={true} />",...l.parameters?.docs?.source}}};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:`args => {
  const {
    date,
    ...rest
  } = args;
  return <RelativeTime noTitle={true} {...rest} date={new Date(date)} />;
}`,...o.parameters?.docs?.source}}};const f=["Default","Playground"];export{l as Default,o as Playground,f as __namedExportsOrder,g as default};
