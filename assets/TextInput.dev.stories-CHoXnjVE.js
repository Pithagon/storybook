import{d as a,j as t}from"./iframe-Cfz2vXeE.js";import{t as n}from"./story-helpers-BdHCBPxk.js";import{T as l}from"./TextInput-hhRVe1zi.js";import{F as m}from"./FormControl-qjqH6r5D.js";import"./preload-helper-D9Z9MdNV.js";import"./Spinner-CP1_WO7z.js";import"./VisuallyHidden-BShfgJrZ.js";import"./TextInputWrapper-A6-jRRIw.js";import"./index.esm-BZRgk2PO.js";import"./index.esm-CN46I9JX.js";import"./BoxWithFallback-BKnPTtUo.js";import"./defaultSxProp-CTX1ZhUd.js";import"./constants-gM483c7h.js";import"./Box-BgR2Y17o.js";import"./sx-BSyIY0hE.js";import"./IconButton-qXcIkMuV.js";import"./ButtonBase-BlGPm-3t.js";import"./useRefObjectAsForwardedRef-DQwuL9aT.js";import"./AriaStatus-CzZh6U-X.js";import"./Announce-rCuV3jiI.js";import"./CounterLabel-DnnBMwbH.js";import"./Button-3sCteC9V.js";import"./Tooltip-BuVThTi0.js";import"./invariant-Dix8OlSS.js";import"./warning-CmA-h2kW.js";import"./_VisuallyHidden-CKJB9yD0.js";import"./useSafeTimeout-BD3cO5TN.js";import"./useProvidedRefOrCreate-Pg3blKRP.js";import"./KeybindingHint-C2Jv3TM3.js";import"./environment-DRRHKtsv.js";import"./user-agent-DiCyFeS1.js";import"./Text-BbpDCwQY.js";import"./anchored-position-Cz4CQZsC.js";import"./index-C-OhZ25x.js";import"./Link-Dm7wEaum.js";import"./useSlots-BdLPLn0-.js";import"./Heading-Axc3-HQM.js";import"./useFocusZone-BvuuCBlY.js";import"./focus-zone-ZDpdvBtN.js";import"./event-listener-signal-Pp6mWBoo.js";import"./iterate-focusable-elements-QzROm7ZI.js";import"./Truncate-DUc3hzfC.js";import"./index.esm-C1WN7kEu.js";import"./index-D3vEWZM2.js";import"./Stack--yR6jd9X.js";import"./useRenderForcingRef-B3HiJhUh.js";import"./InputLabel-BWKIqz-Q.js";import"./FilteredActionList-Lzw7hr5X.js";import"./useProvidedStateOrCreate-BEKIGSkE.js";import"./SkeletonBox-ClHTzzEx.js";import"./useFeatureFlag-paATTdb3.js";import"./Checkbox-BHvnb8mU.js";import"./useIsomorphicLayoutEffect-C_Bsqbyc.js";import"./useAnchoredPosition-IlJWxGCn.js";import"./useResizeObserver-CkcKl7_1.js";import"./Overlay-Du2pzphD.js";import"./Portal-BKCn1yDJ.js";import"./useOnOutsideClick-CaQvIa_9.js";import"./Token-B_OnxjPX.js";import"./Textarea-DREKwwM3.js";import"./Octicon-B0A15aaM.js";import"./LinkButton-D-EvgNXE.js";import"./useResponsiveValue-Cmf8jyBD.js";import"./index-CEFMyGLK.js";import"./useMergedRefs-CMoMpGtu.js";import"./useMnemonics-D4gqZtvW.js";import"./AnchoredOverlay-DQ90Zw6u.js";import"./useFocusTrap-CL_Yl_fl.js";const Wo={title:"Components/TextInput/Dev",component:l,parameters:{controls:{exclude:n}}},i=()=>{const o=a.c(1);let r;return o[0]===Symbol.for("react.memo_cache_sentinel")?(r=t.jsx("form",{children:t.jsxs(m,{children:[t.jsx(m.Label,{children:"Default label"}),t.jsx(l,{className:"testCustomClassnameBorderColor"})]})}),o[0]=r):r=o[0],r},s=()=>{const o=a.c(2);let r;o[0]===Symbol.for("react.memo_cache_sentinel")?(r=t.jsx(m.Label,{children:"Default label"}),o[0]=r):r=o[0];let e;return o[1]===Symbol.for("react.memo_cache_sentinel")?(e=t.jsx("form",{children:t.jsxs(m,{children:[r,t.jsx(l,{sx:{borderColor:"red"}})]})}),o[1]=e):e=o[1],e},p=()=>{const o=a.c(2);let r;o[0]===Symbol.for("react.memo_cache_sentinel")?(r=t.jsx(m.Label,{children:"Default label"}),o[0]=r):r=o[0];let e;return o[1]===Symbol.for("react.memo_cache_sentinel")?(e=t.jsx("form",{children:t.jsxs(m,{children:[r,t.jsx(l,{sx:{borderColor:"red"},className:"testCustomClassnameBorderColor"})]})}),o[1]=e):e=o[1],e};i.__docgenInfo={description:"",methods:[],displayName:"WithCSS"};s.__docgenInfo={description:"",methods:[],displayName:"WithSx"};p.__docgenInfo={description:"",methods:[],displayName:"WithSxAndCSS"};i.parameters={...i.parameters,docs:{...i.parameters?.docs,source:{originalSource:`() => <form>
    <FormControl>
      <FormControl.Label>Default label</FormControl.Label>
      <TextInput className="testCustomClassnameBorderColor" />
    </FormControl>
  </form>`,...i.parameters?.docs?.source}}};s.parameters={...s.parameters,docs:{...s.parameters?.docs,source:{originalSource:`() => <form>
    <FormControl>
      <FormControl.Label>Default label</FormControl.Label>
      <TextInput sx={{
      borderColor: 'red'
    }} />
    </FormControl>
  </form>`,...s.parameters?.docs?.source}}};p.parameters={...p.parameters,docs:{...p.parameters?.docs,source:{originalSource:`() => <form>
    <FormControl>
      <FormControl.Label>Default label</FormControl.Label>
      <TextInput sx={{
      borderColor: 'red'
    }} className="testCustomClassnameBorderColor" />
    </FormControl>
  </form>`,...p.parameters?.docs?.source}}};const Do=["WithCSS","WithSx","WithSxAndCSS"];export{i as WithCSS,s as WithSx,p as WithSxAndCSS,Do as __namedExportsOrder,Wo as default};
