import{j as t,d as c}from"./iframe-Cfz2vXeE.js";import{T as i}from"./ToggleSwitch-CyqyfZ4u.js";import{T as g}from"./ToggleSwitchStoryWrapper-Dkss2G06.js";import{T as n}from"./Text-BbpDCwQY.js";import"./preload-helper-D9Z9MdNV.js";import"./_VisuallyHidden-CKJB9yD0.js";import"./useSafeTimeout-BD3cO5TN.js";import"./useProvidedStateOrCreate-BEKIGSkE.js";import"./AriaStatus-CzZh6U-X.js";import"./Announce-rCuV3jiI.js";import"./Spinner-CP1_WO7z.js";import"./VisuallyHidden-BShfgJrZ.js";import"./useRefObjectAsForwardedRef-DQwuL9aT.js";const m="prc-ToggleSwitch-TextMediumBold-lwHvX",p="prc-ToggleSwitch-TextLargeBold-EuMph",d={TextMediumBold:m,TextLargeBold:p},M={title:"Components/ToggleSwitch",component:i,decorators:[o=>t.jsx(g,{children:o()})]},l=o=>{const e=c.c(3);let a;e[0]===Symbol.for("react.memo_cache_sentinel")?(a=t.jsx(n,{id:"toggle",className:d.TextLargeBold,children:"Toggle label"}),e[0]=a):a=e[0];let s;return e[1]!==o?(s=t.jsxs(t.Fragment,{children:[a,t.jsx(i,{...o,"aria-labelledby":"toggle"})]}),e[1]=o,e[2]=s):s=e[2],s};l.args={checked:void 0,disabled:!1,loading:!1,size:"medium"};l.argTypes={checked:{control:{type:"boolean"}},disabled:{control:{type:"boolean"}},loading:{control:{type:"boolean"}},size:{control:{type:"radio"},options:["small","medium"]},buttonLabelOn:{control:{type:"text"}},buttonLabelOff:{control:{type:"text"}}};const r=()=>{const o=c.c(1);let e;return o[0]===Symbol.for("react.memo_cache_sentinel")?(e=t.jsxs(t.Fragment,{children:[t.jsx(n,{id:"toggle",className:d.TextMediumBold,children:"Toggle label"}),t.jsx(i,{"aria-labelledby":"toggle"})]}),o[0]=e):e=o[0],e};l.__docgenInfo={description:"",methods:[],displayName:"Playground"};r.__docgenInfo={description:"",methods:[],displayName:"Default"};l.parameters={...l.parameters,docs:{...l.parameters?.docs,source:{originalSource:`args => <>
    <Text id="toggle" className={classes.TextLargeBold}>
      Toggle label
    </Text>
    <ToggleSwitch {...args} aria-labelledby="toggle" />
  </>`,...l.parameters?.docs?.source}}};r.parameters={...r.parameters,docs:{...r.parameters?.docs,source:{originalSource:`() => <>
    <Text id="toggle" className={classes.TextMediumBold}>
      Toggle label
    </Text>
    <ToggleSwitch aria-labelledby="toggle" />
  </>`,...r.parameters?.docs?.source}}};const N=["Playground","Default"];export{r as Default,l as Playground,N as __namedExportsOrder,M as default};
