import{r as c,j as n,b as w,T as D,B as R}from"./iframe-Cfz2vXeE.js";import{c as q}from"./client-BWxrjV1N.js";import{D as m}from"./Dialog-BYWFp9hz.js";import{u as k}from"./useFocusZone-BvuuCBlY.js";import{F as p}from"./focus-zone-ZDpdvBtN.js";const F="prc-ConfirmationDialog-ConfirmationHeader-yiLEc",N="prc-ConfirmationDialog-ConfirmationBody-ht9P-",j="prc-ConfirmationDialog-ConfirmationFooter-AqKBI",d={ConfirmationHeader:F,ConfirmationBody:N,ConfirmationFooter:j},H=({title:o,onClose:e,dialogLabelId:t})=>{const a=c.useCallback(()=>{e("close-button")},[e]);return n.jsxs("div",{className:d.ConfirmationHeader,children:[n.jsx("h1",{id:t,children:o}),n.jsx(m.CloseButton,{onClose:a})]})},E=({children:o})=>n.jsx("div",{className:d.ConfirmationBody,children:o}),P=({footerButtons:o})=>{const{containerRef:e}=k({bindKeys:p.ArrowHorizontal|p.Tab,focusInStrategy:"closest"});return n.jsx("div",{ref:e,className:d.ConfirmationFooter,children:n.jsx(m.Buttons,{buttons:o??[]})})},g=o=>{const{onClose:e,title:t,cancelButtonContent:a="Cancel",confirmButtonContent:r="OK",confirmButtonType:i="normal",cancelButtonLoading:s=!1,confirmButtonLoading:u=!1,children:C,className:y,width:b="medium",height:v,overrideButtonFocus:f}=o,B=c.useCallback(()=>{e("cancel")},[e]),T=c.useCallback(()=>{e("confirm")},[e]),h=f!==void 0?f:i==="danger"?"cancel":"confirm",x=[{content:a,onClick:B,autoFocus:h==="cancel",loading:s},{content:r,buttonType:i,onClick:T,autoFocus:h==="confirm",loading:u}];return n.jsx(m,{onClose:e,title:t,footerButtons:x,role:"alertdialog",width:b,height:v,className:y,renderHeader:H,renderBody:E,renderFooter:P,children:C})};let l=null;async function K(o,e){const{content:t,...a}=e;return new Promise(r=>{l||=document.createElement("div"),l.isConnected||document.body.append(l);const i=q.createRoot(l),s=u=>{i.unmount(),r(u==="confirm")};i.render(n.jsx(D,{...o,children:n.jsx(R,{children:n.jsx(g,{...a,onClose:s,children:t})})}))})}function _(){const{theme:o,colorMode:e,dayScheme:t,nightScheme:a}=w();return c.useCallback(i=>K({theme:o,colorMode:e,dayScheme:t,nightScheme:a},i),[o,e,t,a])}g.__docgenInfo={description:`A ConfirmationDialog is a special kind of dialog with more rigid behavior. It
is used to confirm a user action. ConfirmationDialogs always have exactly
two buttons: one to cancel the action and one to confirm it. No custom
rendering capabilities are provided for ConfirmationDialog.`,methods:[],displayName:"ConfirmationDialog",props:{onClose:{required:!0,tsType:{name:"signature",type:"function",raw:"(gesture: 'confirm' | 'close-button' | 'cancel' | 'escape') => void",signature:{arguments:[{type:{name:"union",raw:"'confirm' | 'close-button' | 'cancel' | 'escape'",elements:[{name:"literal",value:"'confirm'"},{name:"literal",value:"'close-button'"},{name:"literal",value:"'cancel'"},{name:"literal",value:"'escape'"}]},name:"gesture"}],return:{name:"void"}}},description:`Required. This callback is invoked when a gesture to close the dialog
is performed. The first argument indicates the gesture.`},title:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:`Required. The title of the ConfirmationDialog. This is usually a brief
question.`},cancelButtonContent:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:'The text to use for the cancel button. Default: "Cancel".'},confirmButtonContent:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:'The text to use for the confirm button. Default: "OK".'},confirmButtonType:{required:!1,tsType:{name:"union",raw:"'normal' | 'primary' | 'danger'",elements:[{name:"literal",value:"'normal'"},{name:"literal",value:"'primary'"},{name:"literal",value:"'danger'"}]},description:"The type of button to use for the confirm button. Default: Button."},cancelButtonLoading:{required:!1,tsType:{name:"boolean"},description:"Whether the cancel button is in a loading state. Default: false."},confirmButtonLoading:{required:!1,tsType:{name:"boolean"},description:"Whether the confirm button is in a loading state. Default: false."},overrideButtonFocus:{required:!1,tsType:{name:"union",raw:"'cancel' | 'confirm'",elements:[{name:"literal",value:"'cancel'"},{name:"literal",value:"'confirm'"}]},description:`Overrides the button that should be initially focused when the dialog is opened. By default, the confirm button
is focused initially unless it is a dangerous action, in which case the cancel button is focused. This should
rarely be overridden, in order to ensure that the user does not accidentally confirm a dangerous action.`},className:{required:!1,tsType:{name:"string"},description:"Additional class names to apply to the dialog"},width:{required:!1,tsType:{name:"union",raw:"keyof typeof widthMap",elements:[{name:"literal",value:"small"},{name:"literal",value:"medium"},{name:"literal",value:"large"},{name:"literal",value:"xlarge"}]},description:`The width of the dialog.
small: 296px
medium: 320px
large: 480px
xlarge: 640px
@default 'medium'`},height:{required:!1,tsType:{name:"union",raw:"keyof typeof heightMap",elements:[{name:"literal",value:"small"},{name:"literal",value:"large"},{name:"literal",value:"auto"}]},description:`The height of the dialog.
small: 480px
large: 640px
auto: variable based on contents`}}};export{g as C,_ as u};
