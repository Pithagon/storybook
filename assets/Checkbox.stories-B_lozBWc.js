import{d as g,j as r}from"./iframe-Cfz2vXeE.js";import{g as k,f as y}from"./form-story-helpers-MiLSNqr8.js";import{C}from"./Checkbox-BHvnb8mU.js";import{F as l}from"./FormControl-qjqH6r5D.js";import"./preload-helper-D9Z9MdNV.js";import"./useIsomorphicLayoutEffect-C_Bsqbyc.js";import"./index-C-OhZ25x.js";import"./Link-Dm7wEaum.js";import"./useRefObjectAsForwardedRef-DQwuL9aT.js";import"./useSlots-BdLPLn0-.js";import"./warning-CmA-h2kW.js";import"./_VisuallyHidden-CKJB9yD0.js";import"./invariant-Dix8OlSS.js";import"./Heading-Axc3-HQM.js";import"./useFocusZone-BvuuCBlY.js";import"./useProvidedRefOrCreate-Pg3blKRP.js";import"./focus-zone-ZDpdvBtN.js";import"./event-listener-signal-Pp6mWBoo.js";import"./user-agent-DiCyFeS1.js";import"./iterate-focusable-elements-QzROm7ZI.js";import"./BoxWithFallback-BKnPTtUo.js";import"./defaultSxProp-CTX1ZhUd.js";import"./constants-gM483c7h.js";import"./index.esm-BZRgk2PO.js";import"./index.esm-CN46I9JX.js";import"./Box-BgR2Y17o.js";import"./sx-BSyIY0hE.js";import"./Truncate-DUc3hzfC.js";import"./index.esm-C1WN7kEu.js";import"./Tooltip-BuVThTi0.js";import"./useSafeTimeout-BD3cO5TN.js";import"./KeybindingHint-C2Jv3TM3.js";import"./environment-DRRHKtsv.js";import"./Text-BbpDCwQY.js";import"./anchored-position-Cz4CQZsC.js";import"./Spinner-CP1_WO7z.js";import"./VisuallyHidden-BShfgJrZ.js";import"./index-D3vEWZM2.js";import"./Stack--yR6jd9X.js";import"./useRenderForcingRef-B3HiJhUh.js";import"./IconButton-qXcIkMuV.js";import"./ButtonBase-BlGPm-3t.js";import"./AriaStatus-CzZh6U-X.js";import"./Announce-rCuV3jiI.js";import"./CounterLabel-DnnBMwbH.js";import"./Button-3sCteC9V.js";import"./TextInputWrapper-A6-jRRIw.js";import"./InputLabel-BWKIqz-Q.js";import"./TextInput-hhRVe1zi.js";import"./FilteredActionList-Lzw7hr5X.js";import"./useProvidedStateOrCreate-BEKIGSkE.js";import"./SkeletonBox-ClHTzzEx.js";import"./useFeatureFlag-paATTdb3.js";import"./useAnchoredPosition-IlJWxGCn.js";import"./useResizeObserver-CkcKl7_1.js";import"./Overlay-Du2pzphD.js";import"./Portal-BKCn1yDJ.js";import"./useOnOutsideClick-CaQvIa_9.js";import"./Token-B_OnxjPX.js";import"./Textarea-DREKwwM3.js";import"./Octicon-B0A15aaM.js";import"./LinkButton-D-EvgNXE.js";import"./useResponsiveValue-Cmf8jyBD.js";import"./index-CEFMyGLK.js";import"./useMergedRefs-CMoMpGtu.js";import"./useMnemonics-D4gqZtvW.js";import"./AnchoredOverlay-DQ90Zw6u.js";import"./useFocusTrap-CL_Yl_fl.js";const A=["required","value","validationStatus"],$o={title:"Components/Checkbox",component:C,parameters:{controls:{exclude:A}}},i=t=>{const o=g.c(16);let e,m,c;if(o[0]!==t){const{value:F,checked:x,...b}=t;m=x,e=b,c=k(e),o[0]=t,o[1]=e,o[2]=m,o[3]=c}else e=o[1],m=o[2],c=o[3];const{parentArgs:f,labelArgs:h,captionArgs:d}=c;let a;o[4]!==e||o[5]!==m?(a=r.jsx(C,{value:"default",checked:m,...e}),o[4]=e,o[5]=m,o[6]=a):a=o[6];let s;o[7]!==h?(s=r.jsx(l.Label,{...h}),o[7]=h,o[8]=s):s=o[8];let p;o[9]!==d?(p=d.children&&r.jsx(l.Caption,{...d}),o[9]=d,o[10]=p):p=o[10];let u;return o[11]!==f||o[12]!==a||o[13]!==s||o[14]!==p?(u=r.jsx("form",{children:r.jsxs(l,{...f,children:[a,s,p]})}),o[11]=f,o[12]=a,o[13]=s,o[14]=p,o[15]=u):u=o[15],u};i.args={checked:!1,indeterminate:!1,visuallyHidden:!1,disabled:!1,labelChildren:"Default checkbox",captionChildren:"Always unchecked unless `checked` is set to true in Storybook controls"};i.argTypes={...y};const n=()=>{const t=g.c(1);let o;return t[0]===Symbol.for("react.memo_cache_sentinel")?(o=r.jsx("form",{children:r.jsxs(l,{children:[r.jsx(C,{value:"default"}),r.jsx(l.Label,{children:"Default label"})]})}),t[0]=o):o=t[0],o};i.__docgenInfo={description:"",methods:[],displayName:"Playground",props:{labelChildren:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},captionChildren:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}};n.__docgenInfo={description:"",methods:[],displayName:"Default"};i.parameters={...i.parameters,docs:{...i.parameters?.docs,source:{originalSource:`({
  value: _value,
  checked,
  ...args
}: FormControlArgs<CheckboxProps>) => {
  const {
    parentArgs,
    labelArgs,
    captionArgs
  } = getFormControlArgsByChildComponent(args);
  return <form>
      <FormControl {...parentArgs}>
        <Checkbox value="default" checked={checked} {...args} />
        <FormControl.Label {...labelArgs} />
        {captionArgs.children && <FormControl.Caption {...captionArgs} />}
      </FormControl>
    </form>;
}`,...i.parameters?.docs?.source}}};n.parameters={...n.parameters,docs:{...n.parameters?.docs,source:{originalSource:`() => <form>
    <FormControl>
      <Checkbox value="default" />
      <FormControl.Label>Default label</FormControl.Label>
    </FormControl>
  </form>`,...n.parameters?.docs?.source}}};const Ho=["Playground","Default"];export{n as Default,i as Playground,Ho as __namedExportsOrder,$o as default};
