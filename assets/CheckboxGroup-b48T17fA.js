import{d as w,R as p,j as b}from"./iframe-Cfz2vXeE.js";import{e as v,f as P,g as T,h as j}from"./index-C-OhZ25x.js";import{a as q,C as E}from"./Checkbox-BHvnb8mU.js";import{u as O}from"./useRenderForcingRef-B3HiJhUh.js";import{F as R}from"./FormControl-qjqH6r5D.js";const f=t=>{const e=w.c(24);let r,n,s,i;e[0]!==t?({children:r,disabled:n,onChange:s,...i}=t,e[0]=t,e[1]=r,e[2]=n,e[3]=s,e[4]=i):(r=e[1],n=e[2],s=e[3],i=e[4]);let c;if(e[5]!==r){const u=p.Children.toArray(r).filter(G).map(K).flat();c=p.Children.toArray(u).filter(V).map(L).filter(Boolean),e[5]=r,e[6]=c}else c=e[6];const S=c,[a,d]=O(S);let h;e[7]!==a||e[8]!==d?(h=u=>{const{value:C,checked:k}=u.currentTarget;if(k){d([...a.current||[],C]);return}d((a.current||[]).filter(x=>x!==C))},e[7]=a,e[8]=d,e[9]=h):h=e[9];const y=h;let o;e[10]!==s||e[11]!==a||e[12]!==y?(o=u=>{s&&(y(u),s(a.current||[],u))},e[10]=s,e[11]=a,e[12]=y,e[13]=o):o=e[13];let l;e[14]!==n||e[15]!==o?(l={disabled:n,onChange:o},e[14]=n,e[15]=o,e[16]=l):l=e[16];let m;e[17]!==r||e[18]!==n||e[19]!==i?(m=b.jsx(j,{disabled:n,...i,children:r}),e[17]=r,e[18]=n,e[19]=i,e[20]=m):m=e[20];let g;return e[21]!==l||e[22]!==m?(g=b.jsx(q.Provider,{value:l,children:m}),e[21]=l,e[22]=m,e[23]=g):g=e[23],g},_=Object.assign(f,{Caption:T,Label:P,Validation:v});f.__docgenInfo={description:"",methods:[],displayName:"CheckboxGroup",props:{onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(selected: string[], e?: ChangeEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"string"}],raw:"string[]"},name:"selected"},{type:{name:"ChangeEvent",elements:[{name:"HTMLInputElement"}],raw:"ChangeEvent<HTMLInputElement>"},name:"e"}],return:{name:"void"}}},description:"An onChange handler that gets called when any of the checkboxes change"},className:{required:!1,tsType:{name:"string"},description:"Class name for custom styling"},"aria-labelledby":{required:!1,tsType:{name:"string"},description:"Used when associating the input group with a label other than `CheckboxOrRadioGroup.Label`"},disabled:{required:!1,tsType:{name:"boolean"},description:"Whether the input group allows user input"},id:{required:!1,tsType:{name:"string"},description:`The unique identifier for this input group. Used to associate the label, validation text, and caption text.
You may want a custom ID to make it easier to select elements in integration tests.`},required:{required:!1,tsType:{name:"boolean"},description:"If true, the user must make a selection before the owning form can be submitted"},sx:{required:!1,tsType:{name:"union",raw:"BetterCssProperties | SystemStyleObject | CSSCustomProperties | CSSSelectorObject",elements:[{name:"signature",type:"object",raw:`{
  [K in keyof SystemCssProperties]: K extends keyof ColorProps
    ? ThemeColorPaths | SystemCssProperties[K]
    : K extends keyof BorderColorProps
      ? ThemeColorPaths | SystemCssProperties[K]
      : K extends keyof ShadowProps
        ? ThemeShadowPaths | SystemCssProperties[K]
        : SystemCssProperties[K]
}`,signature:{properties:[{key:{name:"SystemCssProperties",required:!0},value:{name:"unknown"}}]}},{name:"SystemStyleObject"},{name:"signature",type:"object",raw:"{\n  [key: `--${string}`]: string | number\n}",signature:{properties:[{key:{name:"literal",value:"`--${string}`"},value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!0}}]}},{name:"signature",type:"object",raw:`{
  [cssSelector: string]: SystemStyleObject | CSSCustomProperties
}`,signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"SystemStyleObject | CSSCustomProperties",elements:[{name:"SystemStyleObject"},{name:"signature",type:"object",raw:"{\n  [key: `--${string}`]: string | number\n}",signature:{properties:[{key:{name:"literal",value:"`--${string}`"},value:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}],required:!0}}]}}],required:!0}}]}}]},description:"@deprecated The `sx` prop is deprecated. Replace with a `div` or\nappropriate HTML element instead, with a CSS class for styling.\n@see https://github.com/primer/react/blob/main/contributor-docs/migration-from-box.md"}}};function G(t){return p.isValidElement(t)&&t.type===R}function K(t){return p.isValidElement(t)?t.props.children:[]}function V(t){return p.isValidElement(t)&&t.type===E}function L(t){return p.isValidElement(t)&&(t.props.checked||t.props.defaultChecked)&&t.props.value}export{_ as C};
