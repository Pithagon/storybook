import{d as f,r as u,j as a,c as S}from"./iframe-Cfz2vXeE.js";import{V as x}from"./_VisuallyHidden-CKJB9yD0.js";import{c as _}from"./environment-DRRHKtsv.js";import{i as T}from"./user-agent-DiCyFeS1.js";import{T as P}from"./Text-BbpDCwQY.js";function $(){const n=f.c(2),[e,t]=u.useState(I);let s,o;return n[0]===Symbol.for("react.memo_cache_sentinel")?(s=()=>t(T()),o=[],n[0]=s,n[1]=o):(s=n[0],o=n[1]),u.useEffect(s,o),e}function I(){return _?T():!1}const q=([n,...e])=>(n?.toUpperCase()??"")+e.join("").toLowerCase(),z=(n,e)=>({alt:e?"⌥":"Alt",control:"⌃",shift:"⇧",meta:e?"⌘":"Win",mod:e?"⌘":"⌃",pageup:"PgUp",pagedown:"PgDn",arrowup:"↑",arrowdown:"↓",arrowleft:"←",arrowright:"→",plus:"+",backspace:"⌫",delete:"Del",space:"␣",tab:"⇥",enter:"⏎",escape:"Esc",function:"Fn",capslock:"CapsLock",insert:"Ins",printscreen:"PrtScn"})[n]??q(n),D=(n,e)=>({alt:e?"Option":"Alt",mod:e?"Command":"Control","+":"Plus",pageup:"Page Up",pagedown:"Page Down",arrowup:"Up Arrow",arrowdown:"Down Arrow",arrowleft:"Left Arrow",arrowright:"Right Arrow",capslock:"Caps Lock",printscreen:"Print Screen"})[n]??q(n),j=(n,e)=>({alt:e?"option":"alt",meta:e?"command":"Windows",mod:e?"command":"control",pageup:"page up",pagedown:"page down",arrowup:"up arrow",arrowdown:"down arrow",arrowleft:"left arrow",arrowright:"right arrow",capslock:"caps lock",printscreen:"print screen","`":"backtick","~":"tilde","!":"exclamation point","@":"at","#":"hash",$:"dollar sign","%":"percent","^":"caret","&":"ampersand","*":"asterisk","(":"left parenthesis",")":"right parenthesis",_:"underscore","-":"dash","+":"plus","=":"equals","[":"left bracket","{":"left curly brace","]":"right bracket","}":"right curly brace","\\":"backslash","|":"pipe",";":"semicolon",":":"colon","'":"single quote",'"':"double quote",",":"comma","<":"left angle bracket",".":"period",">":"right angle bracket","/":"forward slash","?":"question mark"," ":"space"})[n]??n.toLowerCase(),K=n=>{const e=f.c(14),{name:t,format:s}=n,o=$();let r;e[0]!==o||e[1]!==t?(r=j(t,o),e[0]=o,e[1]=t,e[2]=r):r=e[2];let i;e[3]!==r?(i=a.jsx(x,{children:r}),e[3]=r,e[4]=i):i=e[4];let l;e[5]!==s||e[6]!==o||e[7]!==t?(l=s==="condensed"?z(t,o):D(t,o),e[5]=s,e[6]=o,e[7]=t,e[8]=l):l=e[8];let c;e[9]!==l?(c=a.jsx("span",{"aria-hidden":!0,children:l}),e[9]=l,e[10]=c):c=e[10];let d;return e[11]!==i||e[12]!==c?(d=a.jsxs(a.Fragment,{children:[i,c]}),e[11]=i,e[12]=c,e[13]=d):d=e[13],d};K.__docgenInfo={description:"Renders a single key with accessible alternative text.",methods:[],displayName:"Key",props:{name:{required:!0,tsType:{name:"string"},description:""},format:{required:!0,tsType:{name:"union",raw:"'condensed' | 'full'",elements:[{name:"literal",value:"'condensed'"},{name:"literal",value:"'full'"}]},description:""}}};const F="prc-components-Chord-vlqS5",L="prc-components-ChordNormal-6rvP6",U="prc-components-ChordOnEmphasis-XDov-",V="prc-components-ChordOnPrimary--7rmy",M="prc-components-ChordSmall-nDiio",h={Chord:F,ChordNormal:L,ChordOnEmphasis:U,ChordOnPrimary:V,ChordSmall:M},R={control:1,meta:2,alt:3,option:4,shift:5,function:6},v=n=>R[n]??1/0,W=(n,e)=>v(n)-v(e),E=n=>n.split("+").map(e=>e.toLowerCase()).sort(W),N=n=>{const e=f.c(13),{keys:t,format:s,variant:o,size:r}=n,i=s===void 0?"condensed":s,l=o===void 0?"normal":o,c=r===void 0?"normal":r,d=l==="normal",b=l==="onEmphasis",w=l==="onPrimary",C=c==="small";let m;e[0]!==d||e[1]!==b||e[2]!==w||e[3]!==C?(m=S(h.Chord,{[h.ChordNormal]:d,[h.ChordOnEmphasis]:b,[h.ChordOnPrimary]:w,[h.ChordSmall]:C}),e[0]=d,e[1]=b,e[2]=w,e[3]=C,e[4]=m):m=e[4];let p;if(e[5]!==i||e[6]!==t){let g;e[8]!==i?(g=(H,k)=>a.jsxs(u.Fragment,{children:[k>0&&i==="full"?a.jsx("span",{"aria-hidden":!0,children:" + "}):" ",a.jsx(K,{name:H,format:i})]},k),e[8]=i,e[9]=g):g=e[9],p=E(t).map(g),e[5]=i,e[6]=t,e[7]=p}else p=e[7];let y;return e[10]!==m||e[11]!==p?(y=a.jsx(P,{className:m,children:p}),e[10]=m,e[11]=p,e[12]=y):y=e[12],y},X=(n,e)=>E(n).map(t=>j(t,e)).join(" ");N.__docgenInfo={description:"",methods:[],displayName:"Chord",props:{keys:{required:!0,tsType:{name:"string"},description:`The keys involved in this keybinding. These should be the full names of the keys as would
be returned by \`KeyboardEvent.key\` (e.g. "Control", "Shift", "ArrowUp", "a", etc.).

Combine keys with the "+" character to form chords. To represent the "+" key, use "Plus".

Combine chords/keys with " " to form sequences that should be pressed one after the other. For example, "a b"
represents "a then b". To represent the " " key, use "Space".

The fake key name "Mod" can be used to represent "Command" on macOS and "Control" on other platforms.

See https://github.com/github/hotkey for format details.`},format:{required:!1,tsType:{name:"union",raw:"'condensed' | 'full'",elements:[{name:"literal",value:"'condensed'"},{name:"literal",value:"'full'"}]},description:`Control the display format. Condensed is most useful in menus and tooltips, while
the full form is better for prose.
@default "condensed"`,defaultValue:{value:"'condensed'",computed:!1}},variant:{required:!1,tsType:{name:"union",raw:"'normal' | 'onEmphasis' | 'onPrimary'",elements:[{name:"literal",value:"'normal'"},{name:"literal",value:"'onEmphasis'"},{name:"literal",value:"'onPrimary'"}]},description:"Set to `onEmphasis` for display on emphasis colors, and `onPrimary` for display on primary buttons.",defaultValue:{value:"'normal'",computed:!1}},size:{required:!1,tsType:{name:"union",raw:"'small' | 'normal'",elements:[{name:"literal",value:"'small'"},{name:"literal",value:"'normal'"}]},description:"Control the size of the hint.",defaultValue:{value:"'normal'",computed:!1}},className:{required:!1,tsType:{name:"string"},description:"Additional class name to apply to the hint."}}};const O=n=>n.split(" "),B=({keys:n,...e})=>O(n).map((t,s)=>a.jsxs(u.Fragment,{children:[s>0&&a.jsxs(a.Fragment,{children:[a.jsx(x,{children:"then"})," "]}),a.jsx(N,{keys:t,...e})]},s)),G=(n,e)=>O(n).map(t=>X(t,e)).join(" then "),J="prc-KeybindingHint-KeybindingHint-0pyit",Q={KeybindingHint:J},Y=n=>{const e=f.c(5),{children:t,className:s}=n;let o;e[0]!==s?(o=S(s,Q.KeybindingHint),e[0]=s,e[1]=o):o=e[1];let r;return e[2]!==t||e[3]!==o?(r=a.jsx(P,{as:"kbd",className:o,"data-testid":"keybinding-hint",children:t}),e[2]=t,e[3]=o,e[4]=r):r=e[4],r},A=u.memo(n=>{const e=f.c(8);let t,s;e[0]!==n?({className:t,...s}=n,e[0]=n,e[1]=t,e[2]=s):(t=e[1],s=e[2]);let o;e[3]!==s?(o=a.jsx(B,{...s}),e[3]=s,e[4]=o):o=e[4];let r;return e[5]!==t||e[6]!==o?(r=a.jsx(Y,{className:t,children:o}),e[5]=t,e[6]=o,e[7]=r):r=e[7],r});A.displayName="KeybindingHint";const se=G;A.__docgenInfo={description:"Indicates the presence of an available keybinding.",methods:[],displayName:"KeybindingHint",props:{keys:{required:!0,tsType:{name:"string"},description:`The keys involved in this keybinding. These should be the full names of the keys as would
be returned by \`KeyboardEvent.key\` (e.g. "Control", "Shift", "ArrowUp", "a", etc.).

Combine keys with the "+" character to form chords. To represent the "+" key, use "Plus".

Combine chords/keys with " " to form sequences that should be pressed one after the other. For example, "a b"
represents "a then b". To represent the " " key, use "Space".

The fake key name "Mod" can be used to represent "Command" on macOS and "Control" on other platforms.

See https://github.com/github/hotkey for format details.`},format:{required:!1,tsType:{name:"union",raw:"'condensed' | 'full'",elements:[{name:"literal",value:"'condensed'"},{name:"literal",value:"'full'"}]},description:`Control the display format. Condensed is most useful in menus and tooltips, while
the full form is better for prose.
@default "condensed"`},variant:{required:!1,tsType:{name:"union",raw:"'normal' | 'onEmphasis' | 'onPrimary'",elements:[{name:"literal",value:"'normal'"},{name:"literal",value:"'onEmphasis'"},{name:"literal",value:"'onPrimary'"}]},description:"Set to `onEmphasis` for display on emphasis colors, and `onPrimary` for display on primary buttons."},size:{required:!1,tsType:{name:"union",raw:"'small' | 'normal'",elements:[{name:"literal",value:"'small'"},{name:"literal",value:"'normal'"}]},description:"Control the size of the hint."},className:{required:!1,tsType:{name:"string"},description:"Additional class name to apply to the hint."}}};export{A as K,se as g,$ as u};
