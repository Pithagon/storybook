import{d,j as t}from"./iframe-Cfz2vXeE.js";import{H as a}from"./Hidden-Bd42JrkY.js";import{T as h}from"./Text-BbpDCwQY.js";import"./preload-helper-D9Z9MdNV.js";import"./useRefObjectAsForwardedRef-DQwuL9aT.js";const u={title:"Experimental/Components/Hidden",parameters:{controls:{expanded:!0}},args:{when:["narrow"]},argTypes:{when:{type:{name:"enum",value:["narrow","regular","wide"]},control:{type:"multi-select"},description:"The viewport type where the content is hidden."}}},i=()=>{const r=d.c(1);let e;return r[0]===Symbol.for("react.memo_cache_sentinel")?(e=t.jsxs(t.Fragment,{children:[t.jsx(h,{children:"The below content is visible when the viewport is regular or wide but hidden when narrow:"}),t.jsx(a,{when:"narrow",children:"This is the said content and it is visible when the viewport is regular or wide but hidden when narrow"})]}),r[0]=e):e=r[0],e},o=r=>{const e=d.c(5);let n;e[0]!==r.when?(n=Array(r.when).join(","),e[0]=r.when,e[1]=n):n=e[1];let s;return e[2]!==r||e[3]!==n?(s=t.jsxs(a,{...r,children:["The content is hidden when the viewport is ",n]}),e[2]=r,e[3]=n,e[4]=s):s=e[4],s};i.__docgenInfo={description:"",methods:[],displayName:"Default"};o.__docgenInfo={description:"",methods:[],displayName:"Playground"};i.parameters={...i.parameters,docs:{...i.parameters?.docs,source:{originalSource:`() => <>
    <Text>The below content is visible when the viewport is regular or wide but hidden when narrow:</Text>
    <Hidden when="narrow">
      This is the said content and it is visible when the viewport is regular or wide but hidden when narrow
    </Hidden>
  </>`,...i.parameters?.docs?.source}}};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:"args => <Hidden {...args}>The content is hidden when the viewport is {Array(args.when).join(',')}</Hidden>",...o.parameters?.docs?.source}}};const x=["Default","Playground"];export{i as Default,o as Playground,x as __namedExportsOrder,u as default};
