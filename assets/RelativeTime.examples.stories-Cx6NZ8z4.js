import{d as y,R as _,j as i}from"./iframe-Cfz2vXeE.js";import{R as p}from"./RelativeTime-CnUjRhzJ.js";import{S}from"./index-D3vEWZM2.js";import{B as w}from"./Button-3sCteC9V.js";import{a as D}from"./Tooltip-BuVThTi0.js";import{L as R}from"./Link-Dm7wEaum.js";import"./preload-helper-D9Z9MdNV.js";import"./create-component-3GntSW2q.js";import"./Stack--yR6jd9X.js";import"./ButtonBase-BlGPm-3t.js";import"./sx-BSyIY0hE.js";import"./index.esm-CN46I9JX.js";import"./useRefObjectAsForwardedRef-DQwuL9aT.js";import"./defaultSxProp-CTX1ZhUd.js";import"./Spinner-CP1_WO7z.js";import"./VisuallyHidden-BShfgJrZ.js";import"./AriaStatus-CzZh6U-X.js";import"./Announce-rCuV3jiI.js";import"./CounterLabel-DnnBMwbH.js";import"./invariant-Dix8OlSS.js";import"./warning-CmA-h2kW.js";import"./_VisuallyHidden-CKJB9yD0.js";import"./useSafeTimeout-BD3cO5TN.js";import"./useProvidedRefOrCreate-Pg3blKRP.js";import"./KeybindingHint-C2Jv3TM3.js";import"./environment-DRRHKtsv.js";import"./user-agent-DiCyFeS1.js";import"./Text-BbpDCwQY.js";import"./anchored-position-Cz4CQZsC.js";const te={title:"Components/RelativeTime/Examples",component:p},a=()=>{const e=y.c(16),[t,o]=_.useState(!1);let r;e[0]!==t?(r=()=>o(!t),e[0]=t,e[1]=r):r=e[1];const u=t?"short":"exact";let m;e[2]!==r||e[3]!==u?(m=i.jsx("div",{children:i.jsxs(w,{onClick:r,"aria-describedby":"relative-time",children:["Show ",u," date"]})}),e[2]=r,e[3]=u,e[4]=m):m=e[4];let d;e[5]===Symbol.for("react.memo_cache_sentinel")?(d=new Date("2020-01-01T00:00:00Z"),e[5]=d):d=e[5];const h=t?"2-digit":void 0,f=t?"numeric":void 0,T=t?"2-digit":void 0,v=t?"short":void 0,x=t?"numeric":void 0,g=t?"short":void 0;let n;e[6]!==h||e[7]!==f||e[8]!==T||e[9]!==v||e[10]!==x||e[11]!==g?(n=i.jsx("div",{children:i.jsx(p,{id:"relative-time",date:d,minute:h,hour:f,day:T,month:v,year:x,timeZoneName:g,prefix:"",noTitle:!0})}),e[6]=h,e[7]=f,e[8]=T,e[9]=v,e[10]=x,e[11]=g,e[12]=n):n=e[12];let l;return e[13]!==n||e[14]!==m?(l=i.jsxs(S,{children:[m,n]}),e[13]=n,e[14]=m,e[15]=l):l=e[15],l},s=()=>{const e=y.c(1);let t;return e[0]===Symbol.for("react.memo_cache_sentinel")?(t=i.jsx(p,{date:new Date("2020-01-01T00:00:00Z"),minute:"2-digit",hour:"numeric",day:"2-digit",month:"short",year:"numeric",timeZoneName:"short",prefix:"",noTitle:!0}),e[0]=t):t=e[0],t},c=()=>{const e=y.c(2);let t;e[0]===Symbol.for("react.memo_cache_sentinel")?(t=new Date("2020-01-01T00:00:00Z").toString(),e[0]=t):t=e[0];let o;return e[1]===Symbol.for("react.memo_cache_sentinel")?(o=i.jsx(D,{text:t,children:i.jsx(R,{href:"https://www.github.com",children:i.jsx(p,{date:new Date("2020-01-01T00:00:00Z"),noTitle:!0})})}),e[1]=o):o=e[1],o};a.__docgenInfo={description:"",methods:[],displayName:"DynamicRelativeTime"};s.__docgenInfo={description:"",methods:[],displayName:"LongDate"};c.__docgenInfo={description:"",methods:[],displayName:"LinkWithTooltip"};a.parameters={...a.parameters,docs:{...a.parameters?.docs,source:{originalSource:`() => {
  const [time, setTime] = React.useState(false);
  return <Stack>
      <div>
        <Button onClick={() => setTime(!time)} aria-describedby="relative-time">
          Show {time ? 'short' : 'exact'} date
        </Button>
      </div>
      <div>
        <RelativeTime id="relative-time" date={new Date('2020-01-01T00:00:00Z')} minute={time ? '2-digit' : undefined} hour={time ? 'numeric' : undefined} day={time ? '2-digit' : undefined} month={time ? 'short' : undefined} year={time ? 'numeric' : undefined} timeZoneName={time ? 'short' : undefined} prefix="" noTitle />
      </div>
    </Stack>;
}`,...a.parameters?.docs?.source}}};s.parameters={...s.parameters,docs:{...s.parameters?.docs,source:{originalSource:`() => <RelativeTime date={new Date('2020-01-01T00:00:00Z')} minute="2-digit" hour="numeric" day="2-digit" month="short" year="numeric" timeZoneName="short" prefix="" noTitle />`,...s.parameters?.docs?.source}}};c.parameters={...c.parameters,docs:{...c.parameters?.docs,source:{originalSource:`() => <Tooltip text={new Date('2020-01-01T00:00:00Z').toString()}>
    <Link href="https://www.github.com">
      <RelativeTime date={new Date('2020-01-01T00:00:00Z')} noTitle={true} />
    </Link>
  </Tooltip>`,...c.parameters?.docs?.source}}};const ie=["DynamicRelativeTime","LongDate","LinkWithTooltip"];export{a as DynamicRelativeTime,c as LinkWithTooltip,s as LongDate,ie as __namedExportsOrder,te as default};
