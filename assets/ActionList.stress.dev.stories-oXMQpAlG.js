import{j as t}from"./iframe-Cfz2vXeE.js";import{S as m}from"./StressTest--2mSJfiK.js";import{h as c}from"./index.esm-C1WN7kEu.js";import{A as i}from"./index-C-OhZ25x.js";import"./preload-helper-D9Z9MdNV.js";import"./Text-BbpDCwQY.js";import"./useRefObjectAsForwardedRef-DQwuL9aT.js";import"./Button-3sCteC9V.js";import"./ButtonBase-BlGPm-3t.js";import"./sx-BSyIY0hE.js";import"./index.esm-CN46I9JX.js";import"./defaultSxProp-CTX1ZhUd.js";import"./Spinner-CP1_WO7z.js";import"./VisuallyHidden-BShfgJrZ.js";import"./AriaStatus-CzZh6U-X.js";import"./Announce-rCuV3jiI.js";import"./CounterLabel-DnnBMwbH.js";import"./Link-Dm7wEaum.js";import"./useSlots-BdLPLn0-.js";import"./warning-CmA-h2kW.js";import"./_VisuallyHidden-CKJB9yD0.js";import"./invariant-Dix8OlSS.js";import"./Heading-Axc3-HQM.js";import"./useFocusZone-BvuuCBlY.js";import"./useProvidedRefOrCreate-Pg3blKRP.js";import"./focus-zone-ZDpdvBtN.js";import"./event-listener-signal-Pp6mWBoo.js";import"./user-agent-DiCyFeS1.js";import"./iterate-focusable-elements-QzROm7ZI.js";import"./BoxWithFallback-BKnPTtUo.js";import"./constants-gM483c7h.js";import"./index.esm-BZRgk2PO.js";import"./Box-BgR2Y17o.js";import"./Truncate-DUc3hzfC.js";import"./Tooltip-BuVThTi0.js";import"./useSafeTimeout-BD3cO5TN.js";import"./KeybindingHint-C2Jv3TM3.js";import"./environment-DRRHKtsv.js";import"./anchored-position-Cz4CQZsC.js";import"./index-D3vEWZM2.js";import"./Stack--yR6jd9X.js";import"./useRenderForcingRef-B3HiJhUh.js";import"./IconButton-qXcIkMuV.js";const Z={title:"StressTests/Components/ActionList",component:i},s=100,p=Array.from({length:s},(r,e)=>({name:`Project ${e+1}`,scope:`Scope ${e+1}`})),o=()=>t.jsx(m,{componentName:"ActionList",title:"Single Select",description:"Selecting a single item from a large list.",totalIterations:s,renderIteration:r=>t.jsx(t.Fragment,{children:t.jsx(i,{selectionVariant:"single",showDividers:!0,role:"menu","aria-label":"Project",children:p.map((e,n)=>t.jsxs(i.Item,{role:"menuitemradio",selected:n===r,"aria-checked":n===r,children:[t.jsx(i.LeadingVisual,{children:t.jsx(c,{})}),e.name,t.jsx(i.Description,{variant:"block",children:e.scope})]},n))})})});o.__docgenInfo={description:"",methods:[],displayName:"SingleSelect"};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:`() => {
  return <StressTest componentName="ActionList" title="Single Select" description="Selecting a single item from a large list." totalIterations={totalIterations} renderIteration={count => {
    return <>
            <ActionList selectionVariant="single" showDividers role="menu" aria-label="Project">
              {projects.map((project, index) => <ActionList.Item key={index} role="menuitemradio" selected={index === count} aria-checked={index === count}>
                  <ActionList.LeadingVisual>
                    <TableIcon />
                  </ActionList.LeadingVisual>
                  {project.name}
                  <ActionList.Description variant="block">{project.scope}</ActionList.Description>
                </ActionList.Item>)}
            </ActionList>
          </>;
  }} />;
}`,...o.parameters?.docs?.source}}};const tt=["SingleSelect"];export{o as SingleSelect,tt as __namedExportsOrder,Z as default};
