import{d as K,j as o,r as B,T as z,B as P}from"./iframe-Cfz2vXeE.js";import{F as S,A as m}from"./FormControl-qjqH6r5D.js";import{f as q,g as $,a as U,b as W}from"./story-helpers-BdHCBPxk.js";import"./preload-helper-D9Z9MdNV.js";import"./TextInputWrapper-A6-jRRIw.js";import"./index.esm-BZRgk2PO.js";import"./index.esm-CN46I9JX.js";import"./BoxWithFallback-BKnPTtUo.js";import"./defaultSxProp-CTX1ZhUd.js";import"./constants-gM483c7h.js";import"./Box-BgR2Y17o.js";import"./sx-BSyIY0hE.js";import"./index-C-OhZ25x.js";import"./Link-Dm7wEaum.js";import"./useRefObjectAsForwardedRef-DQwuL9aT.js";import"./useSlots-BdLPLn0-.js";import"./warning-CmA-h2kW.js";import"./_VisuallyHidden-CKJB9yD0.js";import"./invariant-Dix8OlSS.js";import"./Heading-Axc3-HQM.js";import"./useFocusZone-BvuuCBlY.js";import"./useProvidedRefOrCreate-Pg3blKRP.js";import"./focus-zone-ZDpdvBtN.js";import"./event-listener-signal-Pp6mWBoo.js";import"./user-agent-DiCyFeS1.js";import"./iterate-focusable-elements-QzROm7ZI.js";import"./Truncate-DUc3hzfC.js";import"./index.esm-C1WN7kEu.js";import"./Tooltip-BuVThTi0.js";import"./useSafeTimeout-BD3cO5TN.js";import"./KeybindingHint-C2Jv3TM3.js";import"./environment-DRRHKtsv.js";import"./Text-BbpDCwQY.js";import"./anchored-position-Cz4CQZsC.js";import"./Spinner-CP1_WO7z.js";import"./VisuallyHidden-BShfgJrZ.js";import"./index-D3vEWZM2.js";import"./Stack--yR6jd9X.js";import"./useRenderForcingRef-B3HiJhUh.js";import"./IconButton-qXcIkMuV.js";import"./ButtonBase-BlGPm-3t.js";import"./AriaStatus-CzZh6U-X.js";import"./Announce-rCuV3jiI.js";import"./CounterLabel-DnnBMwbH.js";import"./Button-3sCteC9V.js";import"./InputLabel-BWKIqz-Q.js";import"./TextInput-hhRVe1zi.js";import"./FilteredActionList-Lzw7hr5X.js";import"./useProvidedStateOrCreate-BEKIGSkE.js";import"./SkeletonBox-ClHTzzEx.js";import"./useFeatureFlag-paATTdb3.js";import"./Checkbox-BHvnb8mU.js";import"./useIsomorphicLayoutEffect-C_Bsqbyc.js";import"./useAnchoredPosition-IlJWxGCn.js";import"./useResizeObserver-CkcKl7_1.js";import"./Overlay-Du2pzphD.js";import"./Portal-BKCn1yDJ.js";import"./useOnOutsideClick-CaQvIa_9.js";import"./Token-B_OnxjPX.js";import"./Textarea-DREKwwM3.js";import"./Octicon-B0A15aaM.js";import"./LinkButton-D-EvgNXE.js";import"./useResponsiveValue-Cmf8jyBD.js";import"./index-CEFMyGLK.js";import"./useMergedRefs-CMoMpGtu.js";import"./useMnemonics-D4gqZtvW.js";import"./AnchoredOverlay-DQ90Zw6u.js";import"./useFocusTrap-CL_Yl_fl.js";const Y="prc-Autocomplete-KeyPressLabel-cjfD2",G="prc-Autocomplete-StoryContent-ry7Oa",J="prc-Autocomplete-DefaultForm-f8VR7",M={KeyPressLabel:Y,StoryContent:G,DefaultForm:J},{within:Q,userEvent:V,expect:H}=__STORYBOOK_MODULE_TEST__,X=["id"],Z=({emptyStateText:t,menuLoading:e,selectionVariant:r,openOnFocus:l,anchorSide:c,height:p,overlayMaxHeight:s,width:d,block:u,contrast:L,disabled:_,inputSize:i,loading:g,loaderPosition:y,placeholder:F,validationStatus:E,hideTokenRemoveButtons:f,maxHeight:N,preventTokenWrapping:A,size:T,visibleTokenCount:n})=>{const a={block:u,contrast:L,disabled:_,inputSize:i,loading:g,loaderPosition:y,placeholder:F,validationStatus:E};return{menuArgs:{emptyStateText:t,loading:e,selectionVariant:r},inputArgs:{openOnFocus:l},overlayArgs:{anchorSide:c,height:p,maxHeight:s,width:d},textInputArgs:a,textInputWithTokensArgs:{hideTokenRemoveButtons:f,maxHeight:N,preventTokenWrapping:A,size:T,visibleTokenCount:n,...a}}},k=[{text:"css",id:"0"},{text:"css-in-js",id:"1"},{text:"styled-system",id:"2"},{text:"javascript",id:"3"},{text:"typescript",id:"4"},{text:"react",id:"5"},{text:"design-systems",id:"6"}],At={title:"Components/Autocomplete",decorators:[t=>{const[e,r]=B.useState("none"),l=B.useCallback(c=>{r(c.key)},[]);return o.jsx(z,{children:o.jsx(P,{children:o.jsxs("div",{onKeyDownCapture:l,children:[o.jsxs("p",{className:M.KeyPressLabel,id:"key-press-label",children:["Last key pressed: ",e]}),o.jsx("div",{className:M.StoryContent,children:o.jsx(t,{})})]})})})}],parameters:{controls:{exclude:X}},args:{...U,emptyStateText:"No selectable options",menuLoading:!1,selectionVariant:"single",openOnFocus:!0,anchorSide:void 0,height:"auto",overlayMaxHeight:void 0,width:"auto"},argTypes:{emptyStateText:{control:{type:"text"},table:{category:"Autocomplete.Menu"}},menuLoading:{name:"loading",control:{type:"boolean"},table:{category:"Autocomplete.Menu"}},selectionVariant:{control:{type:"radio"},options:["single","multiple"],table:{category:"Autocomplete.Menu"}},openOnFocus:{control:{type:"boolean"},table:{category:"Autocomplete.Input"}},anchorSide:{control:{type:"select"},options:["inside-top","inside-bottom","inside-left","inside-right","inside-center","outside-top","outside-bottom","outside-left","outside-right"],table:{category:"Autocomplete.Overlay"}},height:{control:{type:"select"},options:["auto","initial","small","medium","large","xlarge","xsmall"],table:{category:"Autocomplete.Overlay"}},overlayMaxHeight:{name:"maxHeight",control:{type:"select"},options:["small","medium","large","xlarge","xsmall",void 0],table:{category:"Autocomplete.Overlay"}},width:{control:{type:"select"},options:["auto","small","medium","large","xlarge","xxlarge"],table:{category:"Autocomplete.Overlay"}},...$("TextInput props"),...q}},D=()=>{const t=K.c(3);let e;t[0]===Symbol.for("react.memo_cache_sentinel")?(e=o.jsx(S.Label,{id:"autocompleteLabel-default",children:"Label"}),t[0]=e):e=t[0];let r;t[1]===Symbol.for("react.memo_cache_sentinel")?(r=o.jsx(m.Input,{}),t[1]=r):r=t[1];let l;return t[2]===Symbol.for("react.memo_cache_sentinel")?(l=o.jsx("form",{className:M.DefaultForm,onSubmit:ee,children:o.jsxs(S,{children:[e,o.jsxs(m,{children:[r,o.jsx(m.Overlay,{children:o.jsx(m.Menu,{selectedItemIds:[],"aria-labelledby":"autocompleteLabel-default",items:k})})]})]})}),t[2]=l):l=t[2],l},j=t=>{const e=K.c(37);let r;e[0]!==t?(r=W(t),e[0]=t,e[1]=r):r=e[1];const{parentArgs:l,labelArgs:c,captionArgs:p,validationArgs:s}=r;let d;e[2]!==t?(d=Z(t),e[2]=t,e[3]=d):d=e[3];const{menuArgs:u,inputArgs:L,overlayArgs:_,textInputArgs:i}=d,g=u.selectionVariant==="multiple";let y;e[4]===Symbol.for("react.memo_cache_sentinel")?(y=[],e[4]=y):y=e[4];const[F,E]=B.useState(y);let f;e[5]===Symbol.for("react.memo_cache_sentinel")?(f=R=>{Array.isArray(R)&&E(R.map(te))},e[5]=f):f=e[5];const N=f;let A;e[6]!==L||e[7]!==i?(A={...L,...i},e[6]=L,e[7]=i,e[8]=A):A=e[8];const T=A;let n;e[9]!==c?(n=o.jsx(S.Label,{id:"autocompleteLabel",...c}),e[9]=c,e[10]=n):n=e[10];let a;e[11]!==T||e[12]!==i.inputSize?(a=o.jsx(m.Input,{"aria-describedby":"validation-field",...T,size:i.inputSize,"data-testid":"autocompleteInput"}),e[11]=T,e[12]=i.inputSize,e[13]=a):a=e[13];let x;e[14]!==g||e[15]!==F?(x=g?F:[],e[14]=g,e[15]=F,e[16]=x):x=e[16];const w=g?N:void 0;let b;e[17]!==u||e[18]!==x||e[19]!==w?(b=o.jsx(m.Menu,{items:k,selectedItemIds:x,onSelectedChange:w,"aria-labelledby":"autocompleteLabel",...u}),e[17]=u,e[18]=x,e[19]=w,e[20]=b):b=e[20];let h;e[21]!==_||e[22]!==b?(h=o.jsx(m.Overlay,{..._,children:b}),e[21]=_,e[22]=b,e[23]=h):h=e[23];let v;e[24]!==h||e[25]!==a?(v=o.jsxs(m,{children:[a,h]}),e[24]=h,e[25]=a,e[26]=v):v=e[26];let I;e[27]!==p?(I=p.children&&o.jsx(S.Caption,{...p}),e[27]=p,e[28]=I):I=e[28];let C;e[29]!==s?(C=s.children&&s.variant&&o.jsx(S.Validation,{id:"validation-field",...s,variant:s.variant}),e[29]=s,e[30]=C):C=e[30];let O;return e[31]!==l||e[32]!==v||e[33]!==I||e[34]!==C||e[35]!==n?(O=o.jsx("form",{className:M.DefaultForm,onSubmit:oe,children:o.jsxs(S,{...l,children:[n,v,I,C]})}),e[31]=l,e[32]=v,e[33]=I,e[34]=C,e[35]=n,e[36]=O):O=e[36],O};j.play=async({canvasElement:t})=>{const e=Q(t),r=e.getByTestId("autocompleteInput");await V.click(r);const l=e.getByText("css");H(l).toBeInTheDocument(),await V.type(l,"{enter}"),H(r).toHaveValue("css")};D.__docgenInfo={description:"",methods:[],displayName:"Default"};j.__docgenInfo={description:"",methods:[{name:"play",docblock:null,modifiers:["static"],params:[{name:"{canvasElement}: {canvasElement: HTMLElement}",optional:!1,type:{name:"signature",type:"object",raw:"{canvasElement: HTMLElement}",signature:{properties:[{key:"canvasElement",value:{name:"HTMLElement",required:!0}}]}}}],returns:null}],displayName:"Playground",props:{labelChildren:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},captionChildren:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}};D.parameters={...D.parameters,docs:{...D.parameters?.docs,source:{originalSource:`() => {
  return <form className={classes.DefaultForm} onSubmit={event => event.preventDefault()}>
      <FormControl>
        <FormControl.Label id="autocompleteLabel-default">Label</FormControl.Label>
        <Autocomplete>
          <Autocomplete.Input />
          <Autocomplete.Overlay>
            <Autocomplete.Menu selectedItemIds={[]} aria-labelledby="autocompleteLabel-default" items={items} />
          </Autocomplete.Overlay>
        </Autocomplete>
      </FormControl>
    </form>;
}`,...D.parameters?.docs?.source}}};j.parameters={...j.parameters,docs:{...j.parameters?.docs,source:{originalSource:`(args: FormControlArgs<AutocompleteArgs>) => {
  const {
    parentArgs,
    labelArgs,
    captionArgs,
    validationArgs
  } = getFormControlArgsByChildComponent(args);
  const {
    menuArgs,
    inputArgs,
    overlayArgs,
    textInputArgs
  } = getArgsByChildComponent(args);
  const isMultiselect = menuArgs.selectionVariant === 'multiple';
  const [selectedItemIds, setSelectedItemIds] = useState<Array<string>>([]);
  const onSelectedChange = (newlySelectedItems: Datum | Datum[]) => {
    if (!Array.isArray(newlySelectedItems)) {
      return;
    }
    setSelectedItemIds(newlySelectedItems.map(item => item.id));
  };
  const autocompleteInput = {
    ...inputArgs,
    ...textInputArgs
  };
  const formValidationId = 'validation-field';
  return <form className={classes.DefaultForm} onSubmit={event => event.preventDefault()}>
      <FormControl {...parentArgs}>
        <FormControl.Label id="autocompleteLabel" {...labelArgs} />
        <Autocomplete>
          <Autocomplete.Input aria-describedby={formValidationId} {...autocompleteInput} size={textInputArgs.inputSize} data-testid="autocompleteInput" />
          <Autocomplete.Overlay {...overlayArgs}>
            <Autocomplete.Menu items={items} selectedItemIds={isMultiselect ? selectedItemIds : []} onSelectedChange={isMultiselect ? onSelectedChange : undefined} aria-labelledby="autocompleteLabel" {...menuArgs} />
          </Autocomplete.Overlay>
        </Autocomplete>
        {captionArgs.children && <FormControl.Caption {...captionArgs} />}
        {validationArgs.children && validationArgs.variant && <FormControl.Validation id={formValidationId} {...validationArgs} variant={validationArgs.variant} />}
      </FormControl>
    </form>;
}`,...j.parameters?.docs?.source}}};function ee(t){return t.preventDefault()}function te(t){return t.id}function oe(t){return t.preventDefault()}const xt=["Default","Playground"];export{D as Default,j as Playground,xt as __namedExportsOrder,At as default};
