import{d as r,j as t}from"./iframe-Cfz2vXeE.js";import{S as a}from"./StateLabel-CuR3qV9s.js";import{V as h}from"./_VisuallyHidden-CKJB9yD0.js";import"./preload-helper-D9Z9MdNV.js";import"./index.esm-C1WN7kEu.js";import"./Octicon-B0A15aaM.js";import"./sx-BSyIY0hE.js";import"./index.esm-CN46I9JX.js";const j={title:"Components/StateLabel/Features",component:a},o=()=>{const s=r.c(1);let e;return s[0]===Symbol.for("react.memo_cache_sentinel")?(e=t.jsx(a,{status:"issueOpened",children:"Open"}),s[0]=e):e=s[0],e},l=()=>{const s=r.c(1);let e;return s[0]===Symbol.for("react.memo_cache_sentinel")?(e=t.jsx(a,{status:"issueClosed",children:"Closed"}),s[0]=e):e=s[0],e},c=()=>{const s=r.c(1);let e;return s[0]===Symbol.for("react.memo_cache_sentinel")?(e=t.jsx(a,{status:"issueClosedNotPlanned",children:"Closed"}),s[0]=e):e=s[0],e},n=()=>{const s=r.c(1);let e;return s[0]===Symbol.for("react.memo_cache_sentinel")?(e=t.jsx(a,{status:"issueDraft",children:"Draft"}),s[0]=e):e=s[0],e},d=()=>{const s=r.c(1);let e;return s[0]===Symbol.for("react.memo_cache_sentinel")?(e=t.jsx(a,{status:"pullOpened",children:"Open"}),s[0]=e):e=s[0],e},i=()=>{const s=r.c(1);let e;return s[0]===Symbol.for("react.memo_cache_sentinel")?(e=t.jsx(a,{status:"pullClosed",children:"Closed"}),s[0]=e):e=s[0],e},u=()=>{const s=r.c(1);let e;return s[0]===Symbol.for("react.memo_cache_sentinel")?(e=t.jsx(a,{status:"pullMerged",children:"Merged"}),s[0]=e):e=s[0],e},m=()=>{const s=r.c(1);let e;return s[0]===Symbol.for("react.memo_cache_sentinel")?(e=t.jsx(a,{status:"pullQueued",children:"Queued"}),s[0]=e):e=s[0],e},p=()=>{const s=r.c(1);let e;return s[0]===Symbol.for("react.memo_cache_sentinel")?(e=t.jsx(a,{status:"draft",children:"Draft"}),s[0]=e):e=s[0],e},f=()=>{const s=r.c(1);let e;return s[0]===Symbol.for("react.memo_cache_sentinel")?(e=t.jsx(a,{status:"unavailable",children:"Unavailable"}),s[0]=e):e=s[0],e},S=()=>{const s=r.c(1);let e;return s[0]===Symbol.for("react.memo_cache_sentinel")?(e=t.jsxs(a,{status:"open",children:[t.jsx(h,{children:"Milestone"}),"Open"]}),s[0]=e):e=s[0],e},_=()=>{const s=r.c(1);let e;return s[0]===Symbol.for("react.memo_cache_sentinel")?(e=t.jsx(a,{status:"closed",children:"Closed"}),s[0]=e):e=s[0],e},b=()=>{const s=r.c(1);let e;return s[0]===Symbol.for("react.memo_cache_sentinel")?(e=t.jsx(a,{status:"issueOpened",variant:"small",children:"Open"}),s[0]=e):e=s[0],e};o.__docgenInfo={description:"",methods:[],displayName:"IssueOpened"};l.__docgenInfo={description:"",methods:[],displayName:"IssueClosed"};c.__docgenInfo={description:"",methods:[],displayName:"IssueClosedNotPlanned"};n.__docgenInfo={description:"",methods:[],displayName:"IssueDraft"};d.__docgenInfo={description:"",methods:[],displayName:"PullOpened"};i.__docgenInfo={description:"",methods:[],displayName:"PullClosed"};u.__docgenInfo={description:"",methods:[],displayName:"PullMerged"};m.__docgenInfo={description:"",methods:[],displayName:"Queued"};p.__docgenInfo={description:"",methods:[],displayName:"Draft"};f.__docgenInfo={description:"",methods:[],displayName:"Unavailable"};S.__docgenInfo={description:"",methods:[],displayName:"Open"};_.__docgenInfo={description:"",methods:[],displayName:"Closed"};b.__docgenInfo={description:"",methods:[],displayName:"Small"};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:'() => <StateLabel status="issueOpened">Open</StateLabel>',...o.parameters?.docs?.source}}};l.parameters={...l.parameters,docs:{...l.parameters?.docs,source:{originalSource:'() => <StateLabel status="issueClosed">Closed</StateLabel>',...l.parameters?.docs?.source}}};c.parameters={...c.parameters,docs:{...c.parameters?.docs,source:{originalSource:'() => <StateLabel status="issueClosedNotPlanned">Closed</StateLabel>',...c.parameters?.docs?.source}}};n.parameters={...n.parameters,docs:{...n.parameters?.docs,source:{originalSource:'() => <StateLabel status="issueDraft">Draft</StateLabel>',...n.parameters?.docs?.source}}};d.parameters={...d.parameters,docs:{...d.parameters?.docs,source:{originalSource:'() => <StateLabel status="pullOpened">Open</StateLabel>',...d.parameters?.docs?.source}}};i.parameters={...i.parameters,docs:{...i.parameters?.docs,source:{originalSource:'() => <StateLabel status="pullClosed">Closed</StateLabel>',...i.parameters?.docs?.source}}};u.parameters={...u.parameters,docs:{...u.parameters?.docs,source:{originalSource:'() => <StateLabel status="pullMerged">Merged</StateLabel>',...u.parameters?.docs?.source}}};m.parameters={...m.parameters,docs:{...m.parameters?.docs,source:{originalSource:'() => <StateLabel status="pullQueued">Queued</StateLabel>',...m.parameters?.docs?.source}}};p.parameters={...p.parameters,docs:{...p.parameters?.docs,source:{originalSource:'() => <StateLabel status="draft">Draft</StateLabel>',...p.parameters?.docs?.source}}};f.parameters={...f.parameters,docs:{...f.parameters?.docs,source:{originalSource:'() => <StateLabel status="unavailable">Unavailable</StateLabel>',...f.parameters?.docs?.source}}};S.parameters={...S.parameters,docs:{...S.parameters?.docs,source:{originalSource:`() => <StateLabel status="open">
    {/* Because open is a generic status, a visually hidden text could be added to specify the type of the artifact */}
    <VisuallyHidden>Milestone</VisuallyHidden>
    Open
  </StateLabel>`,...S.parameters?.docs?.source}}};_.parameters={..._.parameters,docs:{..._.parameters?.docs,source:{originalSource:'() => <StateLabel status="closed">Closed</StateLabel>',..._.parameters?.docs?.source}}};b.parameters={...b.parameters,docs:{...b.parameters?.docs,source:{originalSource:`() => <StateLabel status="issueOpened" variant="small">
    Open
  </StateLabel>`,...b.parameters?.docs?.source}}};const P=["IssueOpened","IssueClosed","IssueClosedNotPlanned","IssueDraft","PullOpened","PullClosed","PullMerged","Queued","Draft","Unavailable","Open","Closed","Small"];export{_ as Closed,p as Draft,l as IssueClosed,c as IssueClosedNotPlanned,n as IssueDraft,o as IssueOpened,S as Open,i as PullClosed,u as PullMerged,d as PullOpened,m as Queued,b as Small,f as Unavailable,P as __namedExportsOrder,j as default};
