import{j as t}from"./iframe-Cfz2vXeE.js";import{A as e}from"./AvatarStack-D10uTfdS.js";import{p as i}from"./storyHelpers-CgecRUOP.js";import{A as a}from"./Avatar-Oyvcp9WV.js";import"./preload-helper-D9Z9MdNV.js";import"./useResponsiveValue-Cmf8jyBD.js";import"./BoxWithFallback-BKnPTtUo.js";import"./defaultSxProp-CTX1ZhUd.js";import"./constants-gM483c7h.js";import"./index.esm-BZRgk2PO.js";import"./index.esm-CN46I9JX.js";import"./Box-BgR2Y17o.js";import"./sx-BSyIY0hE.js";const k={title:"Components/AvatarStack",component:e},o=()=>t.jsxs(e,{children:[t.jsx(a,{alt:"Primer logo",src:"https://avatars.githubusercontent.com/primer"}),t.jsx(a,{alt:"GitHub logo",src:"https://avatars.githubusercontent.com/github"}),t.jsx(a,{alt:"Atom logo",src:"https://avatars.githubusercontent.com/atom"}),t.jsx(a,{alt:"GitHub Desktop logo",src:"https://avatars.githubusercontent.com/desktop"})]}),r=s=>t.jsxs(e,{size:i(s),alignRight:s.alignRight,disableExpand:s.disableExpand,children:[t.jsx(a,{alt:"Primer logo",src:"https://avatars.githubusercontent.com/primer"}),t.jsx(a,{alt:"GitHub logo",src:"https://avatars.githubusercontent.com/github"}),t.jsx(a,{alt:"Atom logo",src:"https://avatars.githubusercontent.com/atom"}),t.jsx(a,{alt:"GitHub Desktop logo",src:"https://avatars.githubusercontent.com/desktop"})]});r.argTypes={size:{control:{type:"number"}},sizeAtNarrow:{name:"size.narrow",control:{type:"number"}},sizeAtRegular:{name:"size.regular",control:{type:"number"}},sizeAtWide:{name:"size.wide",control:{type:"number"}}};o.__docgenInfo={description:"",methods:[],displayName:"Default"};r.__docgenInfo={description:"",methods:[],displayName:"Playground"};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:`() => <AvatarStack>
    <Avatar alt="Primer logo" src="https://avatars.githubusercontent.com/primer" />
    <Avatar alt="GitHub logo" src="https://avatars.githubusercontent.com/github" />
    <Avatar alt="Atom logo" src="https://avatars.githubusercontent.com/atom" />
    <Avatar alt="GitHub Desktop logo" src="https://avatars.githubusercontent.com/desktop" />
  </AvatarStack>`,...o.parameters?.docs?.source}}};r.parameters={...r.parameters,docs:{...r.parameters?.docs,source:{originalSource:`args => <AvatarStack size={parseSizeFromArgs(args)} alignRight={args.alignRight} disableExpand={args.disableExpand}>
    <Avatar alt="Primer logo" src="https://avatars.githubusercontent.com/primer" />
    <Avatar alt="GitHub logo" src="https://avatars.githubusercontent.com/github" />
    <Avatar alt="Atom logo" src="https://avatars.githubusercontent.com/atom" />
    <Avatar alt="GitHub Desktop logo" src="https://avatars.githubusercontent.com/desktop" />
  </AvatarStack>`,...r.parameters?.docs?.source}}};const j=["Default","Playground"];export{o as Default,r as Playground,j as __namedExportsOrder,k as default};
